{"name":"React-custom-scroll","tagline":"Custom scroll React component","body":"# React-Custom-Scroll\r\nAn easily designable, cross browser (!!), custom scroll with ReactJS  \r\nAnimations and scroll rate **exactly** like native scroll \r\n\r\n##### See a [working demo](http://rommguy.github.io/React-Custom-Scroll/demo.html) ###\r\n\r\n### Why do I need this ?  \r\n- Same design on all browsers\r\n- Scrollbar above content instead of floating to the side - same layout on scrolled content as not scrolled content\r\n\r\n### How to use ?\r\nwrap your content with the custom scroll component\r\nremove overflow style properties from your content root component - The custom scroll will take care of it\r\n\r\n\r\n```\r\n<customScroll>\r\n  your content\r\n</customScroll>\r\n\r\n```\r\n\r\n### Options (react props)\r\n\r\n- allowOuterScroll : boolean, default false. Blocks outer scroll while scrolling the content\r\n- heightRelativetoParent : string, default undefined. Content height limit is relative to parent - the value should be the height limit.\r\n- onScroll - function, default undefined. Listener that will be called on each scroll.\r\n- addScrolledClass - boolean, default false. If true, will add a css class 'content-scrolled' while being scrolled.\r\n\r\n##### Example for heightRelativetoParent\r\n\r\n```\r\n<customScroll heightRelativetoParent=\"calc(100% - 20px)\"\">\r\n  your content\r\n</customScroll>  \r\n```\r\n\r\n### It doesn't work, please help me\r\n\r\n- Check if you forgot to remove 'overflow' properties from the content root element.\r\n- Check if your height limit is relative to parent, and you didn't use heightRelativetoParent prop.\r\n","google":"UA-63606990-1","note":"Don't delete this file! It's used internally to help with page regeneration."}